/*  RESET
------------------------------ */

:root {
  font-size: 11px;
}

/* déclaration de la hauteur de l'élément racine pour occuper tout l'espace disponible */
html {
  height: 100vh;
}

body {
  height: 100%;
    margin: 0;
    min-width: 360px;
    font-family: 'Roboto', sans-serif;
  }
  
  /* Include the padding and border in an element's total width and height */
  * {
    box-sizing: border-box;
  }
  
  /* Style the list items 
  ------------------------------ */
  .list-container {
    width: 100%;
    margin: auto;
  }

  /* Remove margins and padding from the list */
  .tasks {
    margin: 0;
    padding: 0;
  }
  
  .task {
    cursor: pointer;
    position: relative;
    padding: 1em 1em 1em 2em;
    list-style-type: none;
    background: #eee;
    font-size: 1.2em;
    transition: 0.2s;
    
    /* make the list items unselectable */
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Set all odd list items to a different color (zebra-stripes) */
  .task:nth-child(odd) {
    background: #f9f9f9;
  }
  
  /* Darker background-color on hover */
  .task:hover {
    background: #ddd;
  }
  
  /* When clicked on, add a background color and strike out text */
  .task.checked {
    background: #888;
    color: #fff;
    text-decoration: line-through;
  }
  
  /* Add a "checked" mark when clicked on */
  .task.checked::before {
    content: '';
    position: absolute;
    border-color: rgb(121, 236, 159);
    border-style: solid;
    border-width: 0 2px 2px 0;
    top: .8em;
    left: .6em;
    transform: rotate(45deg);
    height: 1em;
    width: .5em;
  }
  
  /* Style the close button 
  ------------------------------ */
  .close {
    position: absolute;
    right: 0;
    top: 0;
    padding: 1em;
  }
  
  .close:hover {
    background-color: #B13059;
    color: white;
  }
  
  /* Style the header 
  ------------------------------ */
  .title, .subtitle {
    font-weight: 400;
  }
  .header {
    background: linear-gradient(45deg, rgb(8, 95, 21) 0%, rgb(29, 158, 27) 100%);
    padding: 30px 0;
    color: white;
    text-align: center;
  }
  
  /* Style the input 
  ------------------------------ */
  .form {
    display: flex;
    justify-content: space-between;
    width: 80%;
    margin: auto;
  }

  .input {
    border: transparent 2px solid;
    border-radius: 10px;
    flex-grow: 1;
    margin-right: 1em;
    padding: 0.8em;
    font-size: 1em;
    transition: 0.3s;
  }

  .input:hover {
    box-shadow: 0 0 10px #b9b9b9;
    transition: 0.3s;
  }

  .input:focus {
    outline: none !important;
    box-sizing: content-box;
    border: #B13059 2px solid;
    box-shadow: none;
  }
  
  /* Style the "Add" button 
  ------------------------------ */
  .addBtn {
    padding: 0.8em;
    width: fit-content;
    background: #d9d9d9;
    color: #555;
    text-align: center;
    font-size: 1em;
    cursor: pointer;
    transition: 0.3s;
    border-radius: 10px;
    border-style: solid;
    border-width: 2px;
    border-color: #e0e0e0 #8a8a8a #8a8a8a #e0e0e0;
  }
  
  .addBtn:hover {
    background-color: #bbb;
    transition: 0.3s;
  }

  /* FOOTER
  ------------------------------ */
  /*
  J'assigne une hauteur de 100vh au footer et je le déclare sticky pour qu'il apparaisse collé au bas de page.
  Si la première règle semble placer le footer hors du viewport, la seconde vient l'ajuster en le remontant.
  Grâce à cet artifice, le footer est toujours placé et visible au bas de page sans se superposer au contenu quand la hauteur est contrainte.
  NOTE : permet de corriger ladite superposition sur mobile quand la saisie de l'utilisateur fait apparaître le clavier virtuel.
  */
  .contact {
    position: sticky;
    top: 100vh;
    width: 100%;
    text-align: center;
    padding: 2rem 0;
  }
  
  .contact__social-icons {
    margin-top: 4.5rem;
    padding: 0;
  }
  
  .icon {
    display: inline-block;
    margin: 0 1rem;
  }
  
  .icon a {
    display: block;
  }
  
  .icon i {
    color: #c3c3cb;
    font-size: 2rem;
    -webkit-transition: all 0.3s;
    transition: all 0.3s;
  }
  
  .icon i:hover {
    -webkit-transform: scale(1.3);
            transform: scale(1.3);
  }

  /* RESPONSIVE */

  @media screen and (min-width: 600px) {
    
    :root {
      font-size: 12px;
    }

    .list-container {
      width: 80%;
    }
  }

  @media screen and (min-width: 900px) {
    
    :root {
      font-size: 14px;
    }

    .list-container {
      width: 90%;
    }
  }

  @media screen and (min-width: 1200px) {
    
    :root {
      font-size: 16px;
    }
  }